name: MasterCI
on:
  push:
    branches: [ master ]
jobs:
  BuildMain :
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}   # checkout the correct branch name
          fetch-depth: 0                # fetch the whole repo history

      - name: Semantic Version
        id: Semver
        run: |-
          chmod +x .github/semver.sh
          ./.github/semver.sh

      - name: Cache Maven Packages
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2
          restore-keys: ${{ runner.os }}-m2


      - name: Set Up Apache Maven GitHub Packages
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: github
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Publish Package GitHub Packages
        if: ${{ env.PREVIOUS_VERSION  != env.VERSION }}
        run: mvn --batch-mode -file kboot-jwt-spring-boot-starter/pom.xml deploy -Drevision=$VERSION -Pgithub
        env:
          MAVEN_USERNAME: marzelwidmer
          MAVEN_PASSWORD: ${{secrets.GITHUB_TOKEN}}

      - name: Set up Maven Central Repository
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: azure-artifactory
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Build package
        run: mvn --batch-mode -file kboot-jwt-spring-boot-starter/pom.xml package -Drevision=$VERSION



      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}





      - name: Publish package
        if: ${{ env.PREVIOUS_VERSION  != env.VERSION }}
        run: mvn --batch-mode -file kboot-jwt-spring-boot-starter/pom.xml deploy -Drevision=$VERSION -Dmaven.test.skip=true
        env:
          MAVEN_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}




      - name: Changelog
        if: ${{ env.PREVIOUS_VERSION  != env.VERSION }}
        id: Changelog
        uses: scottbrenner/generate-changelog-action@master
        env:
          REPO: ${{ github.repository }}

      - name: Create Release
        if: ${{ env.PREVIOUS_VERSION  != env.VERSION }}
        id: CreateRelease
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          draft: false
          prerelease: false
